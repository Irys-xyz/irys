[workspace]
exclude = ["ext/"]
members = [
  "crates/actors",
  "crates/c",
  "crates/chain",
  "crates/primitives",
  "crates/reth-node-bridge",
  "crates/types",
  "crates/packing",
  "crates/database",
  "crates/storage",
  "crates/testing-utils",
  "crates/config",
  "crates/efficient-sampling",
  "crates/macros",
  "crates/debug-utils",
  "xtask",
  "crates/price-oracle",
  "crates/cli",
  "crates/p2p",
  "crates/api-client",
  "crates/reward-curve",
  "crates/irys-reth",
]
resolver = "2"

[workspace.package]
edition = "2021"
rust-version = "1.86"
homepage = "http://irys.xyz/"
license = "MIT/Apache-2.0"
repository = "https://github.com/Irys-xyz/irys"
authors = []

[workspace.dependencies]
# Irys
irys-macros = { path = "./crates/macros" }
irys-database = { path = "./crates/database" }
irys-actors = { path = "./crates/actors" }
irys-api-server = { path = "./crates/api-server" }
irys-api-client = { path = "./crates/api-client" }
irys-c = { path = "./crates/c" }
irys-primitives = { path = "./crates/primitives" }
irys-config = { path = "./crates/config" }
irys-reth-node-bridge = { path = "./crates/reth-node-bridge" }
irys-types = { path = "./crates/types" }
irys-storage = { path = "./crates/storage" }
irys-testing-utils = { path = "./crates/testing-utils" }
irys-packing = { path = "./crates/packing" }
irys-chain = { path = "./crates/chain" }
irys-vdf = { path = "./crates/vdf" }
irys-reward-curve = { path = "./crates/reward-curve" }
irys-efficient-sampling = { path = "./crates/efficient-sampling" }
irys-price-oracle = { path = "./crates/price-oracle" }
irys-p2p = { path = "./crates/p2p" }
irys-reth = { path = "./crates/irys-reth" }

ruint = { version = "1.12.3", features = ["alloc", "arbitrary"] }
actix = "0.13.5"
actix-rt = "2.10.0"
actix-web = "4.9.0"
actix-http = "3.9.0"
awc = "3.5.1"
base58 = "0.2.0"
tokio-stream = "0.1"
rand = "0.8"
hex = "0.4"
base64-url = "2"
clap = { version = "4", features = ["derive"] }
arbitrary = { version = "1.3", features = ["derive"] }
rstest = "0.25"
once_cell = "1"
assert_matches = "1"
bytes = "1.5"
derive_more = { version = "2", features = ["full"] }
eyre = "0.6"
sha2 = "0.10"
rayon = "1.8.0"
color-eyre = "0.6"
itertools = "0.13"
futures = "0.3"
bytemuck = "1"
futures-concurrency = "7"
test-log = { version = "0.2", features = ["trace"] }
pretty_assertions = "1"
nodit = { version = "0.9", features = ["serde"] }
modular-bitfield = "0.11"
openssl = { version = "0.10", features = ["vendored"] }
proptest-derive = "0.5"
rust_decimal = "1"
rust_decimal_macros = "1"
serde = { version = "1", default-features = false }
serde_json = "1"
test-fuzz = "6"
thiserror = "1"
tokio = { version = "1", features = ["rt", "macros"] }
toml = "0.8"
derive-syn-parse = "0"
proc-macro2 = "1"
quote = "1"
semver = { version = "1.0", features = ["serde"] }
syn = { version = "2", features = ["full"] }
tracing = "0.1.0"
tracing-error = "0.2"
tracing-subscriber = { version = "0.3", default-features = false, features = [
  "env-filter",
  "fmt",
  "json",
  "ansi",
] }
tempfile = "3"
csv = "1"
jsonrpsee = "0.24"
jsonrpsee-core = "0.24"
jsonrpsee-http-client = "0.24"
jsonrpsee-types = "0.24"
futures-util = "0.3"
lru = "0.14"
paste = "1.0.15"
async-trait = "0.1.83"
strum = { version = "0.27", features = ["derive"] }


# Reth & Alloy deps
# These should be kept in lockstep with the Reth dependencies - for compatability and built times
revm = { version = "24.0.1", default-features = false }

alloy-dyn-abi = "1.1.0"
alloy-evm = { version = "0.10", default-features = false }
alloy-primitives = { version = "1.1.0", default-features = false, features = [
  "map-foldhash",
  "arbitrary",
  "rlp",
  "getrandom",
] }
alloy-rlp = { version = "0.3.10", default-features = false, features = [
  "core-net",
] }
alloy-sol-macro = { version = "1.1.0", default-features = false }
alloy-sol-types = { version = "1.1.0", default-features = false }
alloy-consensus = { version = "1.0.9", default-features = false }
alloy-contract = { version = "1.0.9", default-features = false }
alloy-core = { version = "1.0.9", default-features = false }
alloy-eips = { version = "1.0.9", default-features = false }
alloy-genesis = { version = "1.0.9", default-features = false }
revm-primitives = "19"
revm-interpreter = "19"
alloy-network = { version = "1.0.9", default-features = false }
alloy-provider = { version = "1.0.9", default-features = false }
alloy-rpc-types = { version = "1.0.9", features = [
  "eth",
], default-features = false }
alloy-rpc-types-eth = { version = "1.0.9", default-features = false }
alloy-rpc-types-engine = { version = "1.0.9", default-features = false }
alloy-signer = { version = "1.0.9", default-features = false }
alloy-signer-local = { version = "1.0.9", default-features = false }

# Reth crates

reth = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-chainspec = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-e2e-test-utils = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-engine-local = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-ethereum-engine-primitives = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-evm-ethereum = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-node-ethereum = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-ethereum-primitives = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-evm = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-network = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-node-api = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-node-builder = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-node-core = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-node-metrics = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-payload-builder = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-primitives-traits = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-primitives = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-rpc-eth-api = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-codecs = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-db-api = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-db = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-provider = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-tasks = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-tracing = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-transaction-pool = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-trie-db = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-cli-commands = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-storage-api = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-basic-payload-builder = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-payload-builder-primitives = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-payload-primitives = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-revm = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-chain-state = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-errors = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
reth-ethereum-payload-builder = { git = "https://github.com/Irys-xyz/reth", rev = "61d251df85dc7bdf4cca5048c6269befbf06af54" }
# just used (for local testing)


# reth = { path = "./ext/reth/bin/reth" }
# reth-chainspec = { path = "./ext/reth/crates/chainspec" }
# reth-e2e-test-utils = { path = "./ext/reth/crates/e2e-test-utils" }
# reth-engine-local = { path = "./ext/reth/crates/engine/local" }
# reth-ethereum-engine-primitives = { path = "./ext/reth/crates/ethereum/engine-primitives" }
# reth-evm-ethereum = { path = "./ext/reth/crates/ethereum/evm" }
# reth-node-ethereum = { path = "./ext/reth/crates/ethereum/node" }
# reth-ethereum-primitives = { path = "./ext/reth/crates/ethereum/primitives" }
# reth-evm = { path = "./ext/reth/crates/evm/evm" }
# reth-network = { path = "./ext/reth/crates/net/network" }
# reth-node-api = { path = "./ext/reth/crates/node/api" }
# reth-node-builder = { path = "./ext/reth/crates/node/builder" }
# reth-node-core = { path = "./ext/reth/crates/node/core" }
# reth-node-metrics = { path = "./ext/reth/crates/node/metrics" }
# reth-payload-builder = { path = "./ext/reth/crates/payload/builder" }
# reth-primitives-traits = { path = "./ext/reth/crates/primitives-traits" }
# reth-primitives = { path = "./ext/reth/crates/primitives" }
# reth-rpc-eth-api = { path = "./ext/reth/crates/rpc/rpc-eth-api" }
# reth-codecs = { path = "./ext/reth/crates/storage/codecs" }
# reth-db-api = { path = "./ext/reth/crates/storage/db-api" }
# reth-db = { path = "./ext/reth/crates/storage/db" }
# reth-provider = { path = "./ext/reth/crates/storage/provider" }
# reth-tasks = { path = "./ext/reth/crates/tasks" }
# reth-tracing = { path = "./ext/reth/crates/tracing" }
# reth-transaction-pool = { path = "./ext/reth/crates/transaction-pool" }
# reth-trie-db = { path = "./ext/reth/crates/trie/db" }

# reth-cli-commands = { path = "./ext/reth/crates/cli/commands" }

# all deps + used

# reth = { path = "./ext/reth/bin/reth" }
# # reth-chain-state = { path = "./ext/reth/crates/chain-state" }
# reth-chainspec = { path = "./ext/reth/crates/chainspec" }
# # reth-cli = { path = "./ext/reth/crates/cli/cli" }
# # reth-cli-commands = { path = "./ext/reth/crates/cli/commands" }
# # reth-cli-runner = { path = "./ext/reth/crates/cli/runner" }
# # reth-cli-util = { path = "./ext/reth/crates/cli/util" }
# # reth-config = { path = "./ext/reth/crates/config" }
# # reth-consensus-common = { path = "./ext/reth/crates/consensus/common" }
# # reth-consensus = { path = "./ext/reth/crates/consensus/consensus" }
# # reth-consensus-debug-client = { path = "./ext/reth/crates/consensus/debug-client" }
# reth-e2e-test-utils = { path = "./ext/reth/crates/e2e-test-utils" }
# # reth-invalid-block-hooks = { path = "./ext/reth/crates/engine/invalid-block-hooks" }
# reth-engine-local = { path = "./ext/reth/crates/engine/local" }
# # reth-engine-primitives = { path = "./ext/reth/crates/engine/primitives" }
# # reth-engine-service = { path = "./ext/reth/crates/engine/service" }
# # reth-engine-tree = { path = "./ext/reth/crates/engine/tree" }
# # reth-engine-util = { path = "./ext/reth/crates/engine/util" }
# # reth-errors = { path = "./ext/reth/crates/errors" }
# # reth-ethereum-cli = { path = "./ext/reth/crates/ethereum/cli" }
# # reth-ethereum-consensus = { path = "./ext/reth/crates/ethereum/consensus" }
# reth-ethereum-engine-primitives = { path = "./ext/reth/crates/ethereum/engine-primitives" }
# reth-evm-ethereum = { path = "./ext/reth/crates/ethereum/evm" }
# reth-node-ethereum = { path = "./ext/reth/crates/ethereum/node" }
# # reth-ethereum-payload-builder = { path = "./ext/reth/crates/ethereum/payload" }
# # reth-ethereum-forks = { path = "./ext/reth/crates/ethereum/hardforks" }
# reth-ethereum-primitives = { path = "./ext/reth/crates/ethereum/primitives" }
# # reth-ethereum = { path = "./ext/reth/crates/ethereum/reth" }
# # reth-etl = { path = "./ext/reth/crates/etl" }
# # reth-execution-errors = { path = "./ext/reth/crates/evm/execution-errors" }
# # reth-execution-types = { path = "./ext/reth/crates/evm/execution-types" }
# reth-evm = { path = "./ext/reth/crates/evm/evm" }
# # reth-exex = { path = "./ext/reth/crates/exex/exex" }
# # reth-exex-test-utils = { path = "./ext/reth/crates/exex/test-utils" }
# # reth-exex-types = { path = "./ext/reth/crates/exex/types" }
# # reth-fs-util = { path = "./ext/reth/crates/fs-util" }
# # reth-metrics = { path = "./ext/reth/crates/metrics" }
# # reth-net-banlist = { path = "./ext/reth/crates/net/banlist" }
# # reth-discv4 = { path = "./ext/reth/crates/net/discv4" }
# # reth-discv5 = { path = "./ext/reth/crates/net/discv5" }
# # reth-dns-discovery = { path = "./ext/reth/crates/net/dns" }
# # reth-downloaders = { path = "./ext/reth/crates/net/downloaders" }
# # reth-ecies = { path = "./ext/reth/crates/net/ecies" }
# # reth-eth-wire-types = { path = "./ext/reth/crates/net/eth-wire-types" }
# # reth-eth-wire = { path = "./ext/reth/crates/net/eth-wire" }
# # reth-net-nat = { path = "./ext/reth/crates/net/nat" }
# # reth-network-api = { path = "./ext/reth/crates/net/network-api" }
# # reth-network-types = { path = "./ext/reth/crates/net/network-types" }
# reth-network = { path = "./ext/reth/crates/net/network" }
# # reth-network-p2p = { path = "./ext/reth/crates/net/p2p" }
# # reth-network-peers = { path = "./ext/reth/crates/net/peers" }
# reth-node-api = { path = "./ext/reth/crates/node/api" }
# reth-node-builder = { path = "./ext/reth/crates/node/builder" }
# reth-node-core = { path = "./ext/reth/crates/node/core" }
# # reth-node-events = { path = "./ext/reth/crates/node/events" }
# reth-node-metrics = { path = "./ext/reth/crates/node/metrics" }
# # reth-node-types = { path = "./ext/reth/crates/node/types" }
# # op-reth = { path = "./ext/reth/crates/optimism/bin" }
# # reth-optimism-chainspec = { path = "./ext/reth/crates/optimism/chainspec" }
# # reth-optimism-cli = { path = "./ext/reth/crates/optimism/cli" }
# # reth-optimism-consensus = { path = "./ext/reth/crates/optimism/consensus" }
# # reth-optimism-evm = { path = "./ext/reth/crates/optimism/evm" }
# # reth-optimism-forks = { path = "./ext/reth/crates/optimism/hardforks" }
# # reth-optimism-node = { path = "./ext/reth/crates/optimism/node" }
# # reth-optimism-payload-builder = { path = "./ext/reth/crates/optimism/payload" }
# # reth-optimism-primitives = { path = "./ext/reth/crates/optimism/primitives" }
# # reth-optimism-rpc = { path = "./ext/reth/crates/optimism/rpc" }
# # reth-optimism-storage = { path = "./ext/reth/crates/optimism/storage" }
# # reth-op = { path = "./ext/reth/crates/optimism/reth" }
# # reth-optimism-txpool = { path = "./ext/reth/crates/optimism/txpool" }
# # reth-basic-payload-builder = { path = "./ext/reth/crates/payload/basic" }
# reth-payload-builder = { path = "./ext/reth/crates/payload/builder" }
# # reth-payload-primitives = { path = "./ext/reth/crates/payload/primitives" }
# # reth-payload-validator = { path = "./ext/reth/crates/payload/validator" }
# # reth-payload-builder-primitives = { path = "./ext/reth/crates/payload/builder-primitives" }
# # reth-payload-util = { path = "./ext/reth/crates/payload/util" }
# reth-primitives-traits = { path = "./ext/reth/crates/primitives-traits" }
# reth-primitives = { path = "./ext/reth/crates/primitives" }
# # reth-prune = { path = "./ext/reth/crates/prune/prune" }
# # reth-prune-types = { path = "./ext/reth/crates/prune/types" }
# # reth-revm = { path = "./ext/reth/crates/revm" }
# # reth-ipc = { path = "./ext/reth/crates/rpc/ipc" }
# # reth-rpc-api = { path = "./ext/reth/crates/rpc/rpc-api" }
# # reth-rpc-builder = { path = "./ext/reth/crates/rpc/rpc-builder" }
# # reth-rpc-engine-api = { path = "./ext/reth/crates/rpc/rpc-engine-api" }
# reth-rpc-eth-api = { path = "./ext/reth/crates/rpc/rpc-eth-api" }
# # reth-rpc-eth-types = { path = "./ext/reth/crates/rpc/rpc-eth-types" }
# # reth-rpc-layer = { path = "./ext/reth/crates/rpc/rpc-layer" }
# # reth-rpc-server-types = { path = "./ext/reth/crates/rpc/rpc-server-types" }
# # reth-rpc-api-testing-util = { path = "./ext/reth/crates/rpc/rpc-testing-util" }
# # reth-rpc-types-compat = { path = "./ext/reth/crates/rpc/rpc-types-compat" }
# # reth-rpc = { path = "./ext/reth/crates/rpc/rpc" }
# # reth-stages-api = { path = "./ext/reth/crates/stages/api" }
# # reth-stages = { path = "./ext/reth/crates/stages/stages" }
# # reth-stages-types = { path = "./ext/reth/crates/stages/types" }
# # reth-static-file = { path = "./ext/reth/crates/static-file/static-file" }
# # reth-static-file-types = { path = "./ext/reth/crates/static-file/types" }
# # reth-codecs-derive = { path = "./ext/reth/crates/storage/codecs/derive" }
# reth-codecs = { path = "./ext/reth/crates/storage/codecs" }
# reth-db-api = { path = "./ext/reth/crates/storage/db-api" }
# # reth-db-common = { path = "./ext/reth/crates/storage/db-common" }
# # reth-db-models = { path = "./ext/reth/crates/storage/db-models" }
# reth-db = { path = "./ext/reth/crates/storage/db" }
# # reth-storage-errors = { path = "./ext/reth/crates/storage/errors" }
# # reth-mdbx-sys = { path = "./ext/reth/crates/storage/libmdbx-rs/mdbx-sys" }
# # reth-libmdbx = { path = "./ext/reth/crates/storage/libmdbx-rs" }
# # reth-nippy-jar = { path = "./ext/reth/crates/storage/nippy-jar" }
# reth-provider = { path = "./ext/reth/crates/storage/provider" }
# # reth-storage-api = { path = "./ext/reth/crates/storage/storage-api" }
# # reth-zstd-compressors = { path = "./ext/reth/crates/storage/zstd-compressors" }
# reth-tasks = { path = "./ext/reth/crates/tasks" }
# # reth-tokio-util = { path = "./ext/reth/crates/tokio-util" }
# reth-tracing = { path = "./ext/reth/crates/tracing" }
# reth-transaction-pool = { path = "./ext/reth/crates/transaction-pool" }
# # reth-trie-common = { path = "./ext/reth/crates/trie/common" }
# reth-trie-db = { path = "./ext/reth/crates/trie/db" }
# # reth-trie-parallel = { path = "./ext/reth/crates/trie/parallel" }
# # reth-trie = { path = "./ext/reth/crates/trie/trie" }
# # reth-trie-sparse = { path = "./ext/reth/crates/trie/sparse" }
# # reth-era-downloader = { path = "./ext/reth/crates/era-downloader" }
# # reth-era-utils = { path = "./ext/reth/crates/era-utils" }
# # reth-era = { path = "./ext/reth/crates/era" }
# # reth-ress-protocol = { path = "./ext/reth/crates/ress/protocol" }
# # reth-ress-provider = { path = "./ext/reth/crates/ress/provider" }
# # reth-stateless = { path = "./ext/reth/crates/stateless" }

[profile.dev]
panic = "unwind"

# below inspired from https://github.com/oxidecomputer/omicron/blob/main/Cargo.toml 

# See https://github.com/oxidecomputer/omicron/issues/4009 for some background context here.
# By reducing the debug level (though keeping enough to have meaningful
# backtraces), we reduce incremental build time and binary size significantly.
debug = "line-tables-only"
split-debuginfo = "unpacked"

[profile.dev.build-override]
debug = "line-tables-only"

# always optimise crypto
[profile.dev.package.irys-vdf]
opt-level = 3

[profile.dev.package.irys-packing]
opt-level = 3

[profile.dev.package.irys-c]
opt-level = 3

[profile.dev.package.sha2]
opt-level = 3

[profile.dev.package.openssl]
opt-level = 3

[profile.fast-dev]
inherits = "dev"
opt-level = 3

[workspace.lints]
# to enable in the future
# rust.missing_debug_implementations = "warn"
# rust.missing_docs = "warn"
# rust.rust_2018_idioms = { level = "deny", priority = -1 }
# rustdoc.all = "warn"
# rust.unnameable-types = "warn"

rust.unreachable_pub = "warn"
rust.unused_must_use = "deny"
rust.unused_imports = "warn"

[workspace.lints.clippy]

# cargo = { priority = -1, level = "deny" } # for some reason enabling this cargo lint category causes clippy fix to hang
complexity = { priority = -2, level = "deny" }
perf = { priority = -3, level = "deny" }
correctness = { priority = -4, level = "deny" }
restriction = { priority = -5, level = "allow" } # cherry pick
style = { priority = -6, level = "deny" }
suspicious = { priority = -7, level = "deny" }
pedantic = { priority = -8, level = "allow" }    # cherry pick
nursery = { priority = -9, level = "allow" }     # cherry pick


module_inception = "allow"
doc-overindented-list-items = "allow"
unused-async = "deny"
large-enum-variant = "allow"
doc-lazy-continuation = "allow"
# to enable in the future
type-complexity = "allow"
needless-range-loop = "allow"
too-many-arguments = "allow"
# map_unwrap_or = "deny"
# missing_asserts_for_indexing = "deny"


# need to update clippy for these two
# doc_comment_double_space_linebreaks = "deny"
# elidable_lifetime_names = "deny"

redundant-clone = "deny"
allow_attributes = "deny"
bind_instead_of_map = "deny"
bool_assert_comparison = "deny"
cloned_instead_of_copied = "deny"
explicit_into_iter_loop = "deny"
ignored_unit_patterns = "deny"
implicit_clone = "deny"
inefficient_to_string = "deny"
manual_instant_elapsed = "deny"
manual_is_variant_and = "deny"
manual_string_new = "deny"
match_bool = "deny"
needless_for_each = "deny"
needless_raw_string_hashes = "deny"
needless_raw_strings = "deny"
non_std_lazy_statics = "deny"
option_as_ref_cloned = "deny"
precedence_bits = "deny"
redundant_clone = "deny"
redundant_closure_for_method_calls = "deny"
ref_binding_to_reference = "deny"
return_and_then = "deny"
unseparated_literal_suffix = "deny"
single_char_pattern = "deny"
string_to_string = "deny"
suspicious_operation_groupings = "deny"
trait_duplication_in_bounds = "deny"
unchecked_duration_subtraction = "deny"
unnecessary_join = "deny"
unnecessary_literal_bound = "deny"
unnecessary_struct_initialization = "deny"
unnested_or_patterns = "deny"
unused_trait_names = "deny"
use_self = "deny"

# disabled

# unnecessary_semicolon = "deny" # caused issues
# semicolon_if_nothing_returned = "deny" # caused issues
# redundant_else = "deny" # clarity
# redundant_pub_crate = "deny" # caused issues
# missing_const_for_fn = "deny" # causes weird issues? maybe an update will fix
# manual_assert = "deny" # reduces clarity
# deref_by_slicing = "deny" # reduces clarity
# assertions_on_result_states = "deny" # keeping the asserts helps to improve test clarity
# needless_collect = "deny" # reduces clarity


[workspace.metadata.cargo-machete]
ignored = ["modular-bitfield", "test-fuzz"]

# https://github.com/crate-ci/typos/blob/master/docs/reference.md
[workspace.metadata.typos]
default.extend-ignore-re = [
  "(?Rm)^.*(#|//)\\s*spellchecker:disable-line$",                      # disable a single line: spellchecker:disable-line
  "(?s)(#|//)\\s*spellchecker:off.*?\\n\\s*(#|//)\\s*spellchecker:on", # disable blocks of lines: spellchecker:<on|off>
]
files.extend-exclude = ["ext/*", "fixtures/*"]
